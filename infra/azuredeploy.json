{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.29.47.4906",
      "templateHash": "17979565298912123747"
    }
  },
  "parameters": {
    "environmentName": {
      "type": "string",
      "metadata": {
        "description": "Name of the environment"
      }
    },
    "myPrincipalId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Principal ID to grant access to the AI services. Leave empty to skip"
      }
    },
    "resourceGroupName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Resource group name for the AI services. Defauts to rg-<environmentName>"
      }
    },
    "dnsResourceGroupName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Resource group name for the DNS configurations. Defaults to rg-dns"
      }
    },
    "tags": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "Tags for all AI resources created. JSON object"
      }
    },
    "publicNetworkAccess": {
      "type": "string",
      "allowedValues": [
        "Enabled",
        "Disabled"
      ],
      "metadata": {
        "description": "Allow or deny public network access to the AI services (recommended: Disabled)"
      }
    },
    "systemDatastoresAuthMode": {
      "type": "string",
      "allowedValues": [
        "identity",
        "accessKey"
      ],
      "metadata": {
        "description": "Authentication type to use with Storage Account (recommended: identity)"
      }
    },
    "vnetAddressPrefixes": {
      "type": "array",
      "defaultValue": [
        "10.0.0.0/16"
      ],
      "metadata": {
        "description": "Address prefixes for the spoke vNet"
      }
    },
    "privateEndpointSubnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/24",
      "metadata": {
        "description": "Address prefix for the private endpoint subnet"
      }
    },
    "appSubnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.0.1.0/24",
      "metadata": {
        "description": "Address prefix for the application subnet"
      }
    },
    "aiServicesName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the AI Services account. Automatically generated if left blank"
      }
    },
    "aiHubName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the AI Hub resource. Automatically generated if left blank"
      }
    },
    "storageName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the Storage Account. Automatically generated if left blank"
      }
    },
    "keyVaultName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the Key Vault. Automatically generated if left blank"
      }
    },
    "deploySearch": {
      "type": "bool",
      "metadata": {
        "description": "Whether to deploy Azure AI Search service"
      }
    },
    "searchName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the AI Search Service. Automatically generated if left blank"
      }
    },
    "deploySharedPrivateLinks": {
      "type": "bool",
      "defaultValue": "[parameters('deploySearch')]",
      "metadata": {
        "description": "Whether to deploy shared private links from AI Search"
      }
    },
    "deployAIProject": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Whether to deploy a sample AI Project"
      }
    }
  },
  "variables": {
    "$fxv#0": {
      "analysisServicesServers": "as",
      "apiManagementService": "apim-",
      "appConfigurationConfigurationStores": "appcs-",
      "appManagedEnvironments": "cae-",
      "appContainerApps": "ca-",
      "authorizationPolicyDefinitions": "policy-",
      "automationAutomationAccounts": "aa-",
      "blueprintBlueprints": "bp-",
      "blueprintBlueprintsArtifacts": "bpa-",
      "cacheRedis": "redis-",
      "cdnProfiles": "cdnp-",
      "cdnProfilesEndpoints": "cdne-",
      "cognitiveServicesAccounts": "cog-",
      "cognitiveServicesAzureAI": "cog-ai-",
      "cognitiveServicesBing": "cog-bg-",
      "cognitiveServicesOpenAI": "cog-oa-",
      "cognitiveServicesSpeech": "cog-spc-",
      "cognitiveServicesFormRecognizer": "cog-fr-",
      "cognitiveServicesTextAnalytics": "cog-ta-",
      "cognitiveServicesBot": "cog-bot-",
      "computeAvailabilitySets": "avail-",
      "computeCloudServices": "cld-",
      "computeDiskEncryptionSets": "des",
      "computeDisks": "disk",
      "computeDisksOs": "osdisk",
      "computeGalleries": "gal",
      "computeSnapshots": "snap-",
      "computeVirtualMachines": "vm",
      "computeVirtualMachineScaleSets": "vmss-",
      "containerInstanceContainerGroups": "ci",
      "containerRegistryRegistries": "cr",
      "containerServiceManagedClusters": "aks-",
      "databricksWorkspaces": "dbw-",
      "dataFactoryFactories": "adf-",
      "dataLakeAnalyticsAccounts": "dla",
      "dataLakeStoreAccounts": "dls",
      "dataMigrationServices": "dms-",
      "dBforMySQLServers": "mysql-",
      "dBforPostgreSQLServers": "psql-",
      "devicesIotHubs": "iot-",
      "devicesProvisioningServices": "provs-",
      "devicesProvisioningServicesCertificates": "pcert-",
      "documentDBDatabaseAccounts": "cosmos-",
      "eventGridDomains": "evgd-",
      "eventGridDomainsTopics": "evgt-",
      "eventGridEventSubscriptions": "evgs-",
      "eventHubNamespaces": "evhns-",
      "eventHubNamespacesEventHubs": "evh-",
      "hdInsightClustersHadoop": "hadoop-",
      "hdInsightClustersHbase": "hbase-",
      "hdInsightClustersKafka": "kafka-",
      "hdInsightClustersMl": "mls-",
      "hdInsightClustersSpark": "spark-",
      "hdInsightClustersStorm": "storm-",
      "hybridComputeMachines": "arcs-",
      "insightsActionGroups": "ag-",
      "insightsComponents": "appi-",
      "keyVaultVaults": "kv-",
      "kubernetesConnectedClusters": "arck",
      "kustoClusters": "dec",
      "kustoClustersDatabases": "dedb",
      "logicIntegrationAccounts": "ia-",
      "logicWorkflows": "logic-",
      "machineLearningServicesWorkspaces": "mlw-",
      "managedIdentityUserAssignedIdentities": "id-",
      "managementManagementGroups": "mg-",
      "migrateAssessmentProjects": "migr-",
      "networkApplicationGateways": "agw-",
      "networkApplicationSecurityGroups": "asg-",
      "networkAzureFirewalls": "afw-",
      "networkBastionHosts": "bas-",
      "networkConnections": "con-",
      "networkDnsZones": "dnsz-",
      "networkExpressRouteCircuits": "erc-",
      "networkFirewallPolicies": "afwp-",
      "networkFirewallPoliciesWebApplication": "waf",
      "networkFirewallPoliciesRuleGroups": "wafrg",
      "networkFrontDoors": "fd-",
      "networkFrontdoorWebApplicationFirewallPolicies": "fdfp-",
      "networkLoadBalancersExternal": "lbe-",
      "networkLoadBalancersInternal": "lbi-",
      "networkLoadBalancersInboundNatRules": "rule-",
      "networkLocalNetworkGateways": "lgw-",
      "networkNatGateways": "ng-",
      "networkNetworkInterfaces": "nic-",
      "networkNetworkSecurityGroups": "nsg-",
      "networkNetworkSecurityGroupsSecurityRules": "nsgsr-",
      "networkNetworkWatchers": "nw-",
      "networkPrivateDnsZones": "pdnsz-",
      "networkPrivateLinkServices": "pl-",
      "networkPublicIPAddresses": "pip-",
      "networkPublicIPPrefixes": "ippre-",
      "networkRouteFilters": "rf-",
      "networkRouteTables": "rt-",
      "networkRouteTablesRoutes": "udr-",
      "networkTrafficManagerProfiles": "traf-",
      "networkVirtualNetworkGateways": "vgw-",
      "networkVirtualNetworks": "vnet-",
      "networkVirtualNetworksSubnets": "snet-",
      "networkVirtualNetworksVirtualNetworkPeerings": "peer-",
      "networkVirtualWans": "vwan-",
      "networkVpnGateways": "vpng-",
      "networkVpnGatewaysVpnConnections": "vcn-",
      "networkVpnGatewaysVpnSites": "vst-",
      "notificationHubsNamespaces": "ntfns-",
      "notificationHubsNamespacesNotificationHubs": "ntf-",
      "operationalInsightsWorkspaces": "log-",
      "portalDashboards": "dash-",
      "powerBIDedicatedCapacities": "pbi-",
      "purviewAccounts": "pview-",
      "recoveryServicesVaults": "rsv-",
      "resourcesResourceGroups": "rg-",
      "searchSearchServices": "srch-",
      "serviceBusNamespaces": "sb-",
      "serviceBusNamespacesQueues": "sbq-",
      "serviceBusNamespacesTopics": "sbt-",
      "serviceEndPointPolicies": "se-",
      "serviceFabricClusters": "sf-",
      "signalRServiceSignalR": "sigr",
      "sqlManagedInstances": "sqlmi-",
      "sqlServers": "sql-",
      "sqlServersDataWarehouse": "sqldw-",
      "sqlServersDatabases": "sqldb-",
      "sqlServersDatabasesStretch": "sqlstrdb-",
      "storageStorageAccounts": "st",
      "storageStorageAccountsVm": "stvm",
      "storSimpleManagers": "ssimp",
      "streamAnalyticsCluster": "asa-",
      "synapseWorkspaces": "syn",
      "synapseWorkspacesAnalyticsWorkspaces": "synw",
      "synapseWorkspacesSqlPoolsDedicated": "syndp",
      "synapseWorkspacesSqlPoolsSpark": "synsp",
      "timeSeriesInsightsEnvironments": "tsi-",
      "webServerFarms": "plan-",
      "webSitesAppService": "app-",
      "webSitesAppServiceEnvironment": "ase-",
      "webSitesFunctions": "func-",
      "webStaticSites": "stapp-"
    },
    "location": "[deployment().location]",
    "abbrs": "[variables('$fxv#0')]",
    "uniqueSuffix": "[substring(uniqueString(subscription().id, parameters('environmentName')), 1, 3)]",
    "names": {
      "resourceGroup": "[if(not(empty(parameters('resourceGroupName'))), parameters('resourceGroupName'), format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName')))]",
      "dnsResourceGroup": "[if(not(empty(parameters('dnsResourceGroupName'))), parameters('dnsResourceGroupName'), format('{0}dns', variables('abbrs').resourcesResourceGroups))]",
      "vnet": "[format('{0}{1}-{2}', variables('abbrs').networkVirtualNetworks, parameters('environmentName'), variables('uniqueSuffix'))]",
      "privateLinkSubnet": "[format('{0}{1}-pl-{2}', variables('abbrs').networkVirtualNetworksSubnets, parameters('environmentName'), variables('uniqueSuffix'))]",
      "appSubnet": "[format('{0}{1}-app-{2}', variables('abbrs').networkVirtualNetworksSubnets, parameters('environmentName'), variables('uniqueSuffix'))]",
      "aiServices": "[if(not(empty(parameters('aiServicesName'))), parameters('aiServicesName'), format('{0}{1}-{2}', variables('abbrs').cognitiveServicesAccounts, parameters('environmentName'), variables('uniqueSuffix')))]",
      "aiHub": "[if(not(empty(parameters('aiHubName'))), parameters('aiHubName'), format('{0}hub-{1}-{2}', variables('abbrs').cognitiveServicesAccounts, parameters('environmentName'), variables('uniqueSuffix')))]",
      "search": "[if(not(empty(parameters('searchName'))), parameters('searchName'), format('{0}{1}-{2}', variables('abbrs').searchSearchServices, parameters('environmentName'), variables('uniqueSuffix')))]",
      "storage": "[if(not(empty(parameters('storageName'))), parameters('storageName'), replace(replace(format('{0}{1}{2}', variables('abbrs').storageStorageAccounts, parameters('environmentName'), variables('uniqueSuffix')), '-', ''), '_', ''))]",
      "keyVault": "[if(not(empty(parameters('keyVaultName'))), parameters('keyVaultName'), format('{0}{1}-{2}', variables('abbrs').keyVaultVaults, parameters('environmentName'), variables('uniqueSuffix')))]",
      "computeInstance": "[format('{0}{1}-{2}', variables('abbrs').computeVirtualMachines, parameters('environmentName'), variables('uniqueSuffix'))]"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2023-07-01",
      "name": "[variables('names').resourceGroup]",
      "location": "[variables('location')]",
      "tags": "[parameters('tags')]"
    },
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2023-07-01",
      "name": "[variables('names').dnsResourceGroup]",
      "location": "[variables('location')]"
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "deploy_vnet",
      "resourceGroup": "[variables('names').resourceGroup]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[variables('location')]"
          },
          "vnetName": {
            "value": "[variables('names').vnet]"
          },
          "vnetAddressPrefixes": {
            "value": "[parameters('vnetAddressPrefixes')]"
          },
          "privateEndpointSubnetName": {
            "value": "[variables('names').privateLinkSubnet]"
          },
          "privateEndpointSubnetAddressPrefix": {
            "value": "[parameters('privateEndpointSubnetAddressPrefix')]"
          },
          "appSubnetName": {
            "value": "[variables('names').appSubnet]"
          },
          "appSubnetAddressPrefix": {
            "value": "[parameters('appSubnetAddressPrefix')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.29.47.4906",
              "templateHash": "10627396572905393211"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "vnetName": {
              "type": "string"
            },
            "vnetAddressPrefixes": {
              "type": "array"
            },
            "privateEndpointSubnetName": {
              "type": "string"
            },
            "privateEndpointSubnetAddressPrefix": {
              "type": "string"
            },
            "appSubnetName": {
              "type": "string"
            },
            "appSubnetAddressPrefix": {
              "type": "string"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2020-11-01",
              "name": "[parameters('vnetName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": "[parameters('vnetAddressPrefixes')]"
                },
                "subnets": [
                  {
                    "name": "[parameters('privateEndpointSubnetName')]",
                    "properties": {
                      "addressPrefix": "[parameters('privateEndpointSubnetAddressPrefix')]"
                    }
                  },
                  {
                    "name": "[parameters('appSubnetName')]",
                    "properties": {
                      "addressPrefix": "[parameters('appSubnetAddressPrefix')]",
                      "delegations": [
                        {
                          "name": "default",
                          "properties": {
                            "serviceName": "Microsoft.Web/serverFarms"
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          ],
          "outputs": {
            "vnetId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
            },
            "vnetName": {
              "type": "string",
              "value": "[parameters('vnetName')]"
            },
            "privateEndpointSubnetId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName')), '2020-11-01').subnets[0].id]"
            },
            "appSubnetId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName')), '2020-11-01').subnets[1].id]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('names').resourceGroup)]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "deploy_dns",
      "resourceGroup": "[variables('names').dnsResourceGroup]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "vnetId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('names').resourceGroup), 'Microsoft.Resources/deployments', 'deploy_vnet'), '2022-09-01').outputs.vnetId.value]"
          },
          "vnetName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('names').resourceGroup), 'Microsoft.Resources/deployments', 'deploy_vnet'), '2022-09-01').outputs.vnetName.value]"
          },
          "dnsZones": {
            "value": [
              "privatelink.openai.azure.com",
              "privatelink.cognitiveservices.azure.com",
              "[format('privatelink.blob.{0}', environment().suffixes.storage)]",
              "privatelink.vault.azure.com",
              "privatelink.search.azure.com",
              "privatelink.documents.azure.com",
              "privatelink.api.azureml.ms",
              "privatelink.notebooks.azure.net"
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.29.47.4906",
              "templateHash": "13919513957268722556"
            }
          },
          "parameters": {
            "vnetName": {
              "type": "string"
            },
            "vnetId": {
              "type": "string"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "dnsZones": {
              "type": "array"
            }
          },
          "resources": {
            "privateDnsZones": {
              "copy": {
                "name": "privateDnsZones",
                "count": "[length(parameters('dnsZones'))]"
              },
              "type": "Microsoft.Network/privateDnsZones",
              "apiVersion": "2020-06-01",
              "name": "[parameters('dnsZones')[copyIndex()]]",
              "location": "global",
              "tags": "[parameters('tags')]",
              "properties": {}
            },
            "virtualNetworkLinks": {
              "copy": {
                "name": "virtualNetworkLinks",
                "count": "[length(parameters('dnsZones'))]"
              },
              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}/{1}-link', parameters('dnsZones')[copyIndex()], parameters('vnetName'))]",
              "location": "global",
              "tags": "[parameters('tags')]",
              "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                  "id": "[parameters('vnetId')]"
                }
              },
              "dependsOn": [
                "privateDnsZones"
              ]
            }
          },
          "outputs": {
            "dnsZoneNames": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "copy": {
                "count": "[length(parameters('dnsZones'))]",
                "input": "[parameters('dnsZones')[copyIndex()]]"
              }
            },
            "dnsZoneIds": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "copy": {
                "count": "[length(parameters('dnsZones'))]",
                "input": "[resourceId('Microsoft.Network/privateDnsZones', parameters('dnsZones')[copyIndex()])]"
              }
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('names').dnsResourceGroup)]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('names').resourceGroup), 'Microsoft.Resources/deployments', 'deploy_vnet')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "deploy_aiservices",
      "resourceGroup": "[variables('names').resourceGroup]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[variables('location')]"
          },
          "aiServicesName": {
            "value": "[variables('names').aiServices]"
          },
          "publicNetworkAccess": {
            "value": "[parameters('publicNetworkAccess')]"
          },
          "privateEndpointSubnetId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('names').resourceGroup), 'Microsoft.Resources/deployments', 'deploy_vnet'), '2022-09-01').outputs.privateEndpointSubnetId.value]"
          },
          "openAIPrivateDnsZoneId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('names').dnsResourceGroup), 'Microsoft.Resources/deployments', 'deploy_dns'), '2022-09-01').outputs.dnsZoneIds.value[0]]"
          },
          "cognitiveServicesPrivateDnsZoneId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('names').dnsResourceGroup), 'Microsoft.Resources/deployments', 'deploy_dns'), '2022-09-01').outputs.dnsZoneIds.value[1]]"
          },
          "grantAccessTo": {
            "value": [
              {
                "id": "[parameters('myPrincipalId')]",
                "type": "User"
              },
              {
                "id": "[if(parameters('deploySearch'), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('names').resourceGroup), 'Microsoft.Resources/deployments', 'deploy_search'), '2022-09-01').outputs.searchPrincipalId.value, '')]",
                "type": "ServicePrincipal"
              }
            ]
          },
          "tags": {
            "value": "[parameters('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.29.47.4906",
              "templateHash": "4630673735050265176"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "aiServicesName": {
              "type": "string"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "privateEndpointSubnetId": {
              "type": "string"
            },
            "publicNetworkAccess": {
              "type": "string"
            },
            "openAIPrivateDnsZoneId": {
              "type": "string"
            },
            "cognitiveServicesPrivateDnsZoneId": {
              "type": "string"
            },
            "grantAccessTo": {
              "type": "array"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
              "apiVersion": "2021-05-01",
              "name": "[format('{0}/{1}', format('pl-oai-{0}', parameters('aiServicesName')), format('zg-{0}', parameters('aiServicesName')))]",
              "properties": {
                "privateDnsZoneConfigs": [
                  {
                    "name": "default",
                    "properties": {
                      "privateDnsZoneId": "[parameters('openAIPrivateDnsZoneId')]"
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', format('pl-oai-{0}', parameters('aiServicesName')))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
              "apiVersion": "2021-05-01",
              "name": "[format('{0}/{1}', format('pl-{0}', parameters('aiServicesName')), format('zg-{0}', parameters('aiServicesName')))]",
              "properties": {
                "privateDnsZoneConfigs": [
                  {
                    "name": "default",
                    "properties": {
                      "privateDnsZoneId": "[parameters('cognitiveServicesPrivateDnsZoneId')]"
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', format('pl-{0}', parameters('aiServicesName')))]"
              ]
            },
            {
              "type": "Microsoft.CognitiveServices/accounts",
              "apiVersion": "2023-05-01",
              "name": "[parameters('aiServicesName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "S0"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "kind": "AIServices",
              "properties": {
                "disableLocalAuth": true,
                "customSubDomainName": "[parameters('aiServicesName')]",
                "publicNetworkAccess": "[parameters('publicNetworkAccess')]"
              },
              "tags": "[parameters('tags')]"
            },
            {
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2021-05-01",
              "name": "[format('pl-oai-{0}', parameters('aiServicesName'))]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "subnet": {
                  "id": "[parameters('privateEndpointSubnetId')]"
                },
                "privateLinkServiceConnections": [
                  {
                    "name": "private-endpoint-connection",
                    "properties": {
                      "privateLinkServiceId": "[resourceId('Microsoft.CognitiveServices/accounts', parameters('aiServicesName'))]",
                      "groupIds": [
                        "account"
                      ]
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('aiServicesName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2021-05-01",
              "name": "[format('pl-{0}', parameters('aiServicesName'))]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "subnet": {
                  "id": "[parameters('privateEndpointSubnetId')]"
                },
                "privateLinkServiceConnections": [
                  {
                    "name": "private-endpoint-connection",
                    "properties": {
                      "privateLinkServiceId": "[resourceId('Microsoft.CognitiveServices/accounts', parameters('aiServicesName'))]",
                      "groupIds": [
                        "account"
                      ]
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('aiServicesName'))]"
              ]
            },
            {
              "copy": {
                "name": "writerAccess",
                "count": "[length(parameters('grantAccessTo'))]"
              },
              "condition": "[not(empty(parameters('grantAccessTo')[copyIndex()].id))]",
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.CognitiveServices/accounts/{0}', parameters('aiServicesName'))]",
              "name": "[guid(parameters('grantAccessTo')[copyIndex()].id, resourceId('Microsoft.CognitiveServices/accounts', parameters('aiServicesName')), resourceId('Microsoft.Authorization/roleDefinitions', 'a001fd3d-188f-4b5d-821b-7da978bf7442'))]",
              "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', 'a001fd3d-188f-4b5d-821b-7da978bf7442')]",
                "principalId": "[parameters('grantAccessTo')[copyIndex()].id]",
                "principalType": "[parameters('grantAccessTo')[copyIndex()].type]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('aiServicesName'))]"
              ]
            }
          ],
          "outputs": {
            "aiServicesID": {
              "type": "string",
              "value": "[resourceId('Microsoft.CognitiveServices/accounts', parameters('aiServicesName'))]"
            },
            "aiServicesName": {
              "type": "string",
              "value": "[parameters('aiServicesName')]"
            },
            "aiservicesPrincipalId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', parameters('aiServicesName')), '2023-05-01', 'full').identity.principalId]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('names').dnsResourceGroup), 'Microsoft.Resources/deployments', 'deploy_dns')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('names').resourceGroup), 'Microsoft.Resources/deployments', 'deploy_vnet')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('names').resourceGroup), 'Microsoft.Resources/deployments', 'deploy_search')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('names').resourceGroup)]"
      ]
    },
    {
      "condition": "[parameters('deploySearch')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "deploy_search",
      "resourceGroup": "[variables('names').resourceGroup]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[variables('location')]"
          },
          "searchName": {
            "value": "[variables('names').search]"
          },
          "publicNetworkAccess": {
            "value": "[parameters('publicNetworkAccess')]"
          },
          "privateEndpointSubnetId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('names').resourceGroup), 'Microsoft.Resources/deployments', 'deploy_vnet'), '2022-09-01').outputs.privateEndpointSubnetId.value]"
          },
          "privateDnsZoneId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('names').dnsResourceGroup), 'Microsoft.Resources/deployments', 'deploy_dns'), '2022-09-01').outputs.dnsZoneIds.value[4]]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.29.47.4906",
              "templateHash": "16942939423198703148"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "searchName": {
              "type": "string"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "publicNetworkAccess": {
              "type": "string"
            },
            "privateEndpointSubnetId": {
              "type": "string"
            },
            "privateDnsZoneId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
              "apiVersion": "2021-05-01",
              "name": "[format('{0}/{1}', format('pl-{0}', parameters('searchName')), format('zg-{0}', parameters('searchName')))]",
              "properties": {
                "privateDnsZoneConfigs": [
                  {
                    "name": "default",
                    "properties": {
                      "privateDnsZoneId": "[parameters('privateDnsZoneId')]"
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', format('pl-{0}', parameters('searchName')))]"
              ]
            },
            {
              "type": "Microsoft.Search/searchServices",
              "apiVersion": "2024-06-01-preview",
              "name": "[parameters('searchName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "sku": {
                "name": "standard"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "networkRuleSet": {
                  "bypass": "AzureServices"
                },
                "disableLocalAuth": true,
                "replicaCount": 1,
                "partitionCount": 1,
                "hostingMode": "default",
                "publicNetworkAccess": "[parameters('publicNetworkAccess')]"
              }
            },
            {
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2021-05-01",
              "name": "[format('pl-{0}', parameters('searchName'))]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "subnet": {
                  "id": "[parameters('privateEndpointSubnetId')]"
                },
                "privateLinkServiceConnections": [
                  {
                    "name": "private-endpoint-connection",
                    "properties": {
                      "privateLinkServiceId": "[resourceId('Microsoft.Search/searchServices', parameters('searchName'))]",
                      "groupIds": [
                        "searchService"
                      ]
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Search/searchServices', parameters('searchName'))]"
              ]
            }
          ],
          "outputs": {
            "searchID": {
              "type": "string",
              "value": "[resourceId('Microsoft.Search/searchServices', parameters('searchName'))]"
            },
            "searchPrincipalId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Search/searchServices', parameters('searchName')), '2024-06-01-preview', 'full').identity.principalId]"
            },
            "searchName": {
              "type": "string",
              "value": "[parameters('searchName')]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('names').dnsResourceGroup), 'Microsoft.Resources/deployments', 'deploy_dns')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('names').resourceGroup), 'Microsoft.Resources/deployments', 'deploy_vnet')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('names').resourceGroup)]"
      ]
    },
    {
      "condition": "[parameters('deploySharedPrivateLinks')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "deploy_sharedPrivateLinks",
      "resourceGroup": "[variables('names').resourceGroup]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "searchName": {
            "value": "[variables('names').search]"
          },
          "openaiName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('names').resourceGroup), 'Microsoft.Resources/deployments', 'deploy_aiservices'), '2022-09-01').outputs.aiServicesName.value]"
          },
          "storageName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('names').resourceGroup), 'Microsoft.Resources/deployments', 'deploy_storage'), '2022-09-01').outputs.storageName.value]"
          },
          "grantAccessTo": {
            "value": [
              {
                "id": "[parameters('myPrincipalId')]",
                "type": "User"
              },
              {
                "id": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('names').resourceGroup), 'Microsoft.Resources/deployments', 'deploy_aiservices'), '2022-09-01').outputs.aiservicesPrincipalId.value]",
                "type": "ServicePrincipal"
              }
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.29.47.4906",
              "templateHash": "17088833105592544787"
            }
          },
          "parameters": {
            "searchName": {
              "type": "string"
            },
            "storageName": {
              "type": "string"
            },
            "openaiName": {
              "type": "string"
            },
            "grantAccessTo": {
              "type": "array"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Search/searchServices/sharedPrivateLinkResources",
              "apiVersion": "2024-06-01-preview",
              "name": "[format('{0}/{1}', parameters('searchName'), 'link-to-storage-account')]",
              "properties": {
                "groupId": "blob",
                "privateLinkResourceId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageName'))]",
                "requestMessage": "[format('Requested Private Endpoint Connection from Search Service {0}', parameters('searchName'))]"
              }
            },
            {
              "type": "Microsoft.Search/searchServices/sharedPrivateLinkResources",
              "apiVersion": "2024-06-01-preview",
              "name": "[format('{0}/{1}', parameters('searchName'), 'link-to-ai-service')]",
              "properties": {
                "groupId": "openai_account",
                "privateLinkResourceId": "[resourceId('Microsoft.CognitiveServices/accounts', parameters('openaiName'))]",
                "requestMessage": "[format('Requested Private Endpoint Connection from Search Service {0}', parameters('searchName'))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Search/searchServices/sharedPrivateLinkResources', parameters('searchName'), 'link-to-storage-account')]"
              ]
            },
            {
              "copy": {
                "name": "serviceAccess",
                "count": "[length(parameters('grantAccessTo'))]"
              },
              "condition": "[not(empty(parameters('grantAccessTo')[copyIndex()].id))]",
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.Search/searchServices/{0}', parameters('searchName'))]",
              "name": "[guid(parameters('grantAccessTo')[copyIndex()].id, resourceId('Microsoft.Search/searchServices', parameters('searchName')), resourceId('Microsoft.Authorization/roleDefinitions', '7ca78c08-252a-4471-8644-bb5ff32d4ba0'))]",
              "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', '7ca78c08-252a-4471-8644-bb5ff32d4ba0')]",
                "principalId": "[parameters('grantAccessTo')[copyIndex()].id]",
                "principalType": "[parameters('grantAccessTo')[copyIndex()].type]"
              }
            },
            {
              "copy": {
                "name": "indexAccess",
                "count": "[length(parameters('grantAccessTo'))]"
              },
              "condition": "[not(empty(parameters('grantAccessTo')[copyIndex()].id))]",
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.Search/searchServices/{0}', parameters('searchName'))]",
              "name": "[guid(parameters('grantAccessTo')[copyIndex()].id, resourceId('Microsoft.Search/searchServices', parameters('searchName')), resourceId('Microsoft.Authorization/roleDefinitions', '8ebe5a00-799e-43f5-93ac-243d3dce84a7'))]",
              "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', '8ebe5a00-799e-43f5-93ac-243d3dce84a7')]",
                "principalId": "[parameters('grantAccessTo')[copyIndex()].id]",
                "principalType": "[parameters('grantAccessTo')[copyIndex()].type]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('names').resourceGroup), 'Microsoft.Resources/deployments', 'deploy_aiservices')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('names').resourceGroup), 'Microsoft.Resources/deployments', 'deploy_storage')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('names').resourceGroup)]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "deploy_storage",
      "resourceGroup": "[variables('names').resourceGroup]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[variables('location')]"
          },
          "storageName": {
            "value": "[variables('names').storage]"
          },
          "publicNetworkAccess": {
            "value": "[parameters('publicNetworkAccess')]"
          },
          "systemDatastoresAuthMode": {
            "value": "[parameters('systemDatastoresAuthMode')]"
          },
          "privateEndpointSubnetId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('names').resourceGroup), 'Microsoft.Resources/deployments', 'deploy_vnet'), '2022-09-01').outputs.privateEndpointSubnetId.value]"
          },
          "privateDnsZoneId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('names').dnsResourceGroup), 'Microsoft.Resources/deployments', 'deploy_dns'), '2022-09-01').outputs.dnsZoneIds.value[2]]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.29.47.4906",
              "templateHash": "9356256917516775976"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "storageName": {
              "type": "string"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "publicNetworkAccess": {
              "type": "string"
            },
            "systemDatastoresAuthMode": {
              "type": "string"
            },
            "privateEndpointSubnetId": {
              "type": "string"
            },
            "privateDnsZoneId": {
              "type": "string"
            },
            "grantAccessTo": {
              "type": "array",
              "defaultValue": []
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
              "apiVersion": "2021-05-01",
              "name": "[format('{0}/{1}', format('pl-{0}', parameters('storageName')), format('zg-{0}', parameters('storageName')))]",
              "properties": {
                "privateDnsZoneConfigs": [
                  {
                    "name": "default",
                    "properties": {
                      "privateDnsZoneId": "[parameters('privateDnsZoneId')]"
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', format('pl-{0}', parameters('storageName')))]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2023-05-01",
              "name": "[parameters('storageName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "sku": {
                "name": "Standard_LRS"
              },
              "kind": "StorageV2",
              "properties": {
                "isLocalUserEnabled": "[equals(parameters('systemDatastoresAuthMode'), 'accessKey')]",
                "accessTier": "Hot",
                "encryption": {
                  "keySource": "Microsoft.Storage",
                  "services": {
                    "blob": {
                      "enabled": true,
                      "keyType": "Account"
                    },
                    "file": {
                      "enabled": true,
                      "keyType": "Account"
                    }
                  }
                },
                "minimumTlsVersion": "TLS1_2",
                "networkAcls": {
                  "bypass": "AzureServices",
                  "defaultAction": "[if(equals(parameters('publicNetworkAccess'), 'Enabled'), 'Allow', 'Deny')]"
                },
                "supportsHttpsTrafficOnly": true
              }
            },
            {
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2021-05-01",
              "name": "[format('pl-{0}', parameters('storageName'))]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "subnet": {
                  "id": "[parameters('privateEndpointSubnetId')]"
                },
                "privateLinkServiceConnections": [
                  {
                    "name": "private-endpoint-connection",
                    "properties": {
                      "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageName'))]",
                      "groupIds": [
                        "blob"
                      ]
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageName'))]"
              ]
            },
            {
              "copy": {
                "name": "writerAccess",
                "count": "[length(parameters('grantAccessTo'))]"
              },
              "condition": "[not(empty(parameters('grantAccessTo')[copyIndex()].id))]",
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.Storage/storageAccounts/{0}', parameters('storageName'))]",
              "name": "[guid(parameters('grantAccessTo')[copyIndex()].id, resourceId('Microsoft.Storage/storageAccounts', parameters('storageName')), resourceId('Microsoft.Authorization/roleDefinitions', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe'))]",
              "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')]",
                "principalId": "[parameters('grantAccessTo')[copyIndex()].id]",
                "principalType": "[parameters('grantAccessTo')[copyIndex()].type]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageName'))]"
              ]
            }
          ],
          "outputs": {
            "storageID": {
              "type": "string",
              "value": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageName'))]"
            },
            "storageName": {
              "type": "string",
              "value": "[parameters('storageName')]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('names').dnsResourceGroup), 'Microsoft.Resources/deployments', 'deploy_dns')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('names').resourceGroup), 'Microsoft.Resources/deployments', 'deploy_vnet')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('names').resourceGroup)]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "deploy_keyVault",
      "resourceGroup": "[variables('names').resourceGroup]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[variables('location')]"
          },
          "keyVaultName": {
            "value": "[variables('names').keyVault]"
          },
          "publicNetworkAccess": {
            "value": "[parameters('publicNetworkAccess')]"
          },
          "privateEndpointSubnetId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('names').resourceGroup), 'Microsoft.Resources/deployments', 'deploy_vnet'), '2022-09-01').outputs.privateEndpointSubnetId.value]"
          },
          "privateDnsZoneId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('names').dnsResourceGroup), 'Microsoft.Resources/deployments', 'deploy_dns'), '2022-09-01').outputs.dnsZoneIds.value[3]]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.29.47.4906",
              "templateHash": "3991832730148357887"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "keyVaultName": {
              "type": "string"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "publicNetworkAccess": {
              "type": "string"
            },
            "privateEndpointSubnetId": {
              "type": "string"
            },
            "privateDnsZoneId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
              "apiVersion": "2021-05-01",
              "name": "[format('{0}/{1}', format('pl-{0}', parameters('keyVaultName')), format('zg-{0}', parameters('keyVaultName')))]",
              "properties": {
                "privateDnsZoneConfigs": [
                  {
                    "name": "default",
                    "properties": {
                      "privateDnsZoneId": "[parameters('privateDnsZoneId')]"
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', format('pl-{0}', parameters('keyVaultName')))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2023-07-01",
              "name": "[parameters('keyVaultName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "createMode": "default",
                "enabledForDeployment": false,
                "enabledForDiskEncryption": false,
                "enabledForTemplateDeployment": false,
                "enableSoftDelete": true,
                "enableRbacAuthorization": true,
                "publicNetworkAccess": "[parameters('publicNetworkAccess')]",
                "networkAcls": {
                  "bypass": "AzureServices",
                  "defaultAction": "Deny"
                },
                "sku": {
                  "family": "A",
                  "name": "standard"
                },
                "tenantId": "[subscription().tenantId]"
              }
            },
            {
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2021-05-01",
              "name": "[format('pl-{0}', parameters('keyVaultName'))]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "subnet": {
                  "id": "[parameters('privateEndpointSubnetId')]"
                },
                "privateLinkServiceConnections": [
                  {
                    "name": "private-endpoint-connection",
                    "properties": {
                      "privateLinkServiceId": "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]",
                      "groupIds": [
                        "vault"
                      ]
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
              ]
            }
          ],
          "outputs": {
            "keyVaultID": {
              "type": "string",
              "value": "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
            },
            "keyVaultName": {
              "type": "string",
              "value": "[parameters('keyVaultName')]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('names').dnsResourceGroup), 'Microsoft.Resources/deployments', 'deploy_dns')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('names').resourceGroup), 'Microsoft.Resources/deployments', 'deploy_vnet')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('names').resourceGroup)]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "deploy_ai",
      "resourceGroup": "[variables('names').resourceGroup]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[variables('location')]"
          },
          "aiHubName": {
            "value": "[variables('names').aiHub]"
          },
          "aiProjectName": {
            "value": "[format('cog-ai-prj-{0}-{1}', parameters('environmentName'), variables('uniqueSuffix'))]"
          },
          "aiServicesName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('names').resourceGroup), 'Microsoft.Resources/deployments', 'deploy_aiservices'), '2022-09-01').outputs.aiServicesName.value]"
          },
          "keyVaultName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('names').resourceGroup), 'Microsoft.Resources/deployments', 'deploy_keyVault'), '2022-09-01').outputs.keyVaultName.value]"
          },
          "storageName": {
            "value": "[variables('names').storage]"
          },
          "searchName": "[if(parameters('deploySearch'), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('names').resourceGroup), 'Microsoft.Resources/deployments', 'deploy_search'), '2022-09-01').outputs.searchName.value), createObject('value', ''))]",
          "publicNetworkAccess": {
            "value": "[parameters('publicNetworkAccess')]"
          },
          "systemDatastoresAuthMode": {
            "value": "[parameters('systemDatastoresAuthMode')]"
          },
          "privateEndpointSubnetId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('names').resourceGroup), 'Microsoft.Resources/deployments', 'deploy_vnet'), '2022-09-01').outputs.privateEndpointSubnetId.value]"
          },
          "apiPrivateDnsZoneId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('names').dnsResourceGroup), 'Microsoft.Resources/deployments', 'deploy_dns'), '2022-09-01').outputs.dnsZoneIds.value[6]]"
          },
          "notebookPrivateDnsZoneId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('names').dnsResourceGroup), 'Microsoft.Resources/deployments', 'deploy_dns'), '2022-09-01').outputs.dnsZoneIds.value[7]]"
          },
          "defaultComputeName": {
            "value": "[variables('names').computeInstance]"
          },
          "deployAIProject": {
            "value": "[parameters('deployAIProject')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.29.47.4906",
              "templateHash": "8944877880257299333"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "aiServicesName": {
              "type": "string"
            },
            "storageName": {
              "type": "string"
            },
            "keyVaultName": {
              "type": "string"
            },
            "searchName": {
              "type": "string",
              "defaultValue": ""
            },
            "aiHubName": {
              "type": "string"
            },
            "aiProjectName": {
              "type": "string"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "publicNetworkAccess": {
              "type": "string"
            },
            "systemDatastoresAuthMode": {
              "type": "string"
            },
            "privateEndpointSubnetId": {
              "type": "string"
            },
            "apiPrivateDnsZoneId": {
              "type": "string"
            },
            "notebookPrivateDnsZoneId": {
              "type": "string"
            },
            "defaultComputeName": {
              "type": "string"
            },
            "deployAIProject": {
              "type": "bool"
            }
          },
          "resources": [
            {
              "type": "Microsoft.MachineLearningServices/workspaces/connections",
              "apiVersion": "2024-04-01",
              "name": "[format('{0}/{1}', parameters('aiHubName'), format('{0}-connection-AIServices', parameters('aiHubName')))]",
              "properties": {
                "category": "AIServices",
                "target": "[reference(resourceId('Microsoft.CognitiveServices/accounts', parameters('aiServicesName')), '2023-05-01').endpoint]",
                "authType": "AAD",
                "isSharedToAll": true,
                "metadata": {
                  "ApiType": "Azure",
                  "ResourceId": "[resourceId('Microsoft.CognitiveServices/accounts', parameters('aiServicesName'))]",
                  "ApiVersion": "2023-07-01-preview",
                  "DeploymentApiVersion": "2023-10-01-preview",
                  "Location": "[parameters('location')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.MachineLearningServices/workspaces', parameters('aiHubName'))]"
              ]
            },
            {
              "condition": "[not(empty(parameters('searchName')))]",
              "type": "Microsoft.MachineLearningServices/workspaces/connections",
              "apiVersion": "2024-04-01",
              "name": "[format('{0}/{1}', parameters('aiHubName'), format('{0}-connection-Search', parameters('aiHubName')))]",
              "properties": {
                "category": "CognitiveSearch",
                "target": "[format('https://{0}.search.windows.net', parameters('searchName'))]",
                "authType": "AAD",
                "isSharedToAll": true
              },
              "dependsOn": [
                "[resourceId('Microsoft.MachineLearningServices/workspaces', parameters('aiHubName'))]"
              ]
            },
            {
              "type": "Microsoft.MachineLearningServices/workspaces/computes",
              "apiVersion": "2024-04-01-preview",
              "name": "[format('{0}/{1}', parameters('aiHubName'), parameters('defaultComputeName'))]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "computeType": "ComputeInstance",
                "properties": {
                  "vmSize": "Standard_DS11_v2"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.MachineLearningServices/workspaces', parameters('aiHubName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
              "apiVersion": "2021-05-01",
              "name": "[format('{0}/{1}', format('pl-{0}', parameters('aiHubName')), format('zg-{0}', parameters('aiHubName')))]",
              "properties": {
                "privateDnsZoneConfigs": [
                  {
                    "name": "api",
                    "properties": {
                      "privateDnsZoneId": "[parameters('apiPrivateDnsZoneId')]"
                    }
                  },
                  {
                    "name": "notebook",
                    "properties": {
                      "privateDnsZoneId": "[parameters('notebookPrivateDnsZoneId')]"
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', format('pl-{0}', parameters('aiHubName')))]"
              ]
            },
            {
              "type": "Microsoft.MachineLearningServices/workspaces",
              "apiVersion": "2024-04-01-preview",
              "name": "[parameters('aiHubName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "publicNetworkAccess": "[parameters('publicNetworkAccess')]",
                "managedNetwork": {
                  "isolationMode": "AllowOnlyApprovedOutbound",
                  "outboundRules": "[if(not(empty(parameters('searchName'))), createObject(format('rule-{0}', parameters('searchName')), createObject('type', 'PrivateEndpoint', 'destination', createObject('serviceResourceId', resourceId('Microsoft.Search/searchServices', parameters('searchName')), 'subresourceTarget', 'searchService'))), createObject())]"
                },
                "friendlyName": "[parameters('aiHubName')]",
                "keyVault": "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]",
                "storageAccount": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageName'))]",
                "systemDatastoresAuthMode": "[parameters('systemDatastoresAuthMode')]"
              },
              "kind": "hub"
            },
            {
              "condition": "[parameters('deployAIProject')]",
              "type": "Microsoft.MachineLearningServices/workspaces",
              "apiVersion": "2024-04-01-preview",
              "name": "[parameters('aiProjectName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "publicNetworkAccess": "[parameters('publicNetworkAccess')]",
                "hubResourceId": "[resourceId('Microsoft.MachineLearningServices/workspaces', parameters('aiHubName'))]"
              },
              "kind": "Project",
              "dependsOn": [
                "[resourceId('Microsoft.MachineLearningServices/workspaces', parameters('aiHubName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2021-05-01",
              "name": "[format('pl-{0}', parameters('aiHubName'))]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "subnet": {
                  "id": "[parameters('privateEndpointSubnetId')]"
                },
                "privateLinkServiceConnections": [
                  {
                    "name": "private-endpoint-connection",
                    "properties": {
                      "privateLinkServiceId": "[resourceId('Microsoft.MachineLearningServices/workspaces', parameters('aiHubName'))]",
                      "groupIds": [
                        "amlworkspace"
                      ]
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.MachineLearningServices/workspaces', parameters('aiHubName'))]"
              ]
            }
          ],
          "outputs": {
            "aiHubID": {
              "type": "string",
              "value": "[resourceId('Microsoft.MachineLearningServices/workspaces', parameters('aiHubName'))]"
            },
            "aiHubName": {
              "type": "string",
              "value": "[parameters('aiHubName')]"
            },
            "aiProjectID": {
              "type": "string",
              "value": "[resourceId('Microsoft.MachineLearningServices/workspaces', parameters('aiProjectName'))]"
            },
            "aiProjectName": {
              "type": "string",
              "value": "[parameters('aiProjectName')]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('names').resourceGroup), 'Microsoft.Resources/deployments', 'deploy_aiservices')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('names').dnsResourceGroup), 'Microsoft.Resources/deployments', 'deploy_dns')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('names').resourceGroup), 'Microsoft.Resources/deployments', 'deploy_keyVault')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('names').resourceGroup), 'Microsoft.Resources/deployments', 'deploy_vnet')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('names').resourceGroup), 'Microsoft.Resources/deployments', 'deploy_search')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('names').resourceGroup)]"
      ]
    }
  ],
  "outputs": {
    "AZURE_TENANT_ID": {
      "type": "string",
      "value": "[tenant().tenantId]"
    },
    "AZURE_RESOURCE_GROUP_ID": {
      "type": "string",
      "value": "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('names').resourceGroup)]"
    },
    "AZURE_RESOURCE_GROUP_NAME": {
      "type": "string",
      "value": "[variables('names').resourceGroup]"
    }
  }
}